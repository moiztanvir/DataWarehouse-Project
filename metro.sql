-- Create the Database
-- DROP DATABASE metro_dw;
CREATE DATABASE IF NOT EXISTS metro_dw;

-- Use the Database
USE metro_dw;

SELECT * FROM CUSTOMERS;
SELECT * FROM PRODUCTS;
 SELECT * FROM TRANSACTIONS;

-- Step 1: Create the Dimensions Tables

CREATE TABLE IF NOT EXISTS CUSTOMERS (
    CUSTOMER_ID VARCHAR(50) PRIMARY KEY,
    CUSTOMER_NAME VARCHAR(100),
    GENDER VARCHAR(10)
);

CREATE TABLE IF NOT EXISTS PRODUCTS (
    PRODUCT_ID VARCHAR(50) PRIMARY KEY,
    PRODUCT_NAME VARCHAR(100),
    PRODUCT_PRICE DECIMAL(10, 2),
    SUPPLIER_ID VARCHAR(50),
    SUPPLIER_NAME VARCHAR(100),
    STORE_ID VARCHAR(50),
    STORE_NAME VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS TRANSACTIONS (
    ORDER_ID VARCHAR(50) PRIMARY KEY,
    ORDER_DATE DATE,
    PRODUCT_ID VARCHAR(50),
    QUANTITY INT,
    CUSTOMER_ID VARCHAR(50),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);
-- Step 2: Create the Fact Table

CREATE TABLE IF NOT EXISTS FACT_TRANSACTIONS (
    ORDER_ID VARCHAR(50) PRIMARY KEY,
    ORDER_DATE DATE,
    PRODUCT_ID VARCHAR(50),
    CUSTOMER_ID VARCHAR(50),
    CUSTOMER_NAME VARCHAR(100),
    GENDER VARCHAR(10),
    PRODUCT_NAME VARCHAR(100),
    PRODUCT_PRICE DECIMAL(10, 2),
    SUPPLIER_ID VARCHAR(50),
    SUPPLIER_NAME VARCHAR(100),
    STORE_ID VARCHAR(50),
    STORE_NAME VARCHAR(100),
    QUANTITY INT,
    SALE DECIMAL(10, 2), -- SALE = QUANTITY Ã— PRODUCT_PRICE
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);


-- Step 3: Enrich and Insert Data into Fact Table

INSERT INTO FACT_TRANSACTIONS (
    ORDER_ID, ORDER_DATE, PRODUCT_ID, CUSTOMER_ID, CUSTOMER_NAME, GENDER,
    PRODUCT_NAME, PRODUCT_PRICE, SUPPLIER_ID, SUPPLIER_NAME, STORE_ID, STORE_NAME,
    QUANTITY, SALE
)
SELECT 
    T.ORDER_ID, 
    T.ORDER_DATE, 
    T.PRODUCT_ID, 
    T.CUSTOMER_ID, 
    C.CUSTOMER_NAME, 
    C.GENDER, 
    P.PRODUCT_NAME, 
    P.PRODUCT_PRICE, 
    P.SUPPLIER_ID, 
    P.SUPPLIER_NAME, 
    P.STORE_ID, 
    P.STORE_NAME, 
    T.QUANTITY,
    (T.QUANTITY * P.PRODUCT_PRICE) AS SALE
FROM TRANSACTIONS T
LEFT JOIN CUSTOMERS C ON T.CUSTOMER_ID = C.CUSTOMER_ID
LEFT JOIN PRODUCTS P ON T.PRODUCT_ID = P.PRODUCT_ID;

-- SHOW VARIABLES LIKE 'secure_file_priv';


LOAD DATA INFILE 'C:/Program Files/MySQL/MySQL Server 8.0/Uploads/customers_data.csv'
IGNORE
INTO TABLE CUSTOMERS
FIELDS TERMINATED BY ','  -- Columns separated by commas
LINES TERMINATED BY '\n'  -- Rows separated by newlines
IGNORE 1 ROWS             -- Skip the header row
(CUSTOMER_ID, CUSTOMER_NAME, GENDER);

LOAD DATA INFILE 'C:/Program Files/MySQL/MySQL Server 8.0/Uploads/products_data.csv'
IGNORE
INTO TABLE PRODUCTS
FIELDS TERMINATED BY ',' 
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(PRODUCT_ID, PRODUCT_NAME, PRODUCT_PRICE, SUPPLIER_ID, SUPPLIER_NAME, STORE_ID, STORE_NAME);

LOAD DATA INFILE 'C:/Program Files/MySQL/MySQL Server 8.0/Uploads/transactions.csv'
IGNORE
INTO TABLE TRANSACTIONS
FIELDS TERMINATED BY ',' 
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(ORDER_ID, ORDER_DATE, PRODUCT_ID, QUANTITY, CUSTOMER_ID);


